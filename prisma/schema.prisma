// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(uuid())
  clerkUserId String         @unique
  email       String         @unique
  name        String?
  imageUrl    String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  entries     JournalEntry[]
  prompts     Prompt[]
  analyses    Analysis[]
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to user
  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Content is an array of prompt-response pairs
  content Json

  analysis Analysis?

  // Relation to prompts (many-to-many)
  prompts Prompt[] @relation("JournalEntryPrompts")

  @@unique([userId, id])
}

model Prompt {
  id String @id @default(uuid())

  promptText String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Each user defines their own prompts
  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Relation to JournalEntry (many-to-many)
  journalEntries JournalEntry[] @relation("JournalEntryPrompts")

  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  mood           String
  summary        String  @db.Text
  color          String
  negative       Boolean
  subject        String
  sentimentScore Float   @default(0)

  @@unique([entryId])
  @@index([userId])
}
